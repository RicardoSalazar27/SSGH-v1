{"version":3,"sources":["registro.js"],"names":["window","location","pathname","btnCrear","document","getElementById","mostrarAlerta","titulo","mensaje","tipo","Swal","fire","icon","title","text","then","$","modal","mostrarAlerta2","mensajeResultado","style","display","textContent","className","setTimeout","addEventListener","async","event","preventDefault","nuevoUsuario","nombre","value","trim","email","password","password2","telefono","direccion","datos","FormData","Object","entries","forEach","key","append","url","respuesta","fetch","method","body","resultado","json","error","console","log"],"mappings":"AAAA,GAAA,cAAAA,OAAAC,SAAAC,SAAA,CAEA,MAAAC,EAAAC,SAAAC,eAAA,gBAwDA,SAAAC,cAAAC,EAAAC,EAAAC,GACAC,KAAAC,KAAA,CACAC,KAAAH,EACAI,MAAAN,EACAO,KAAAN,IACAO,KAAA,KACAC,EAAA,UAAAC,MAAA,UAIA,SAAAC,eAAAX,EAAAC,EAAAC,GACA,MAAAU,EAAAf,SAAAC,eAAA,qBACAc,EAAAC,MAAAC,QAAA,QACAF,EAAAG,YAAAd,EAIAW,EAAAI,UADA,UAAAd,EACA,qBACA,YAAAA,EACA,sBAEA,mBAIAe,WAAA,KACAL,EAAAC,MAAAC,QAAA,QACA,KAjFAlB,GACAA,EAAAsB,iBAAA,SAAAC,eAAAC,GAEAA,EAAAC,iBAEA,MAAAC,EAAA,CACAC,OAAA1B,SAAAC,eAAA,UAAA0B,MAAAC,OACAC,MAAA7B,SAAAC,eAAA,SAAA0B,MAAAC,OACAE,SAAA9B,SAAAC,eAAA,YAAA0B,MAAAC,OACAG,UAAA/B,SAAAC,eAAA,aAAA0B,MAAAC,OACAI,SAAAhC,SAAAC,eAAA,YAAA0B,MAAAC,OACAK,UAAAjC,SAAAC,eAAA,aAAA0B,MAAAC,QAGA,GAAA,KAAAH,EAAAI,OAAA,KAAAJ,EAAAC,QAAA,KAAAD,EAAAQ,WAAA,KAAAR,EAAAK,UAAA,KAAAL,EAAAM,UAKA,GAAAN,EAAAK,WAAAL,EAAAM,UAAA,QAMAN,EAAAM,UAEA,IAEA,MAAAG,EAAA,IAAAC,SACAC,OAAAC,QAAAZ,GAAAa,QAAA,EAAAC,EAAAZ,KAAAO,EAAAM,OAAAD,EAAAZ,IAOA,MAAAc,EAAA,iCACAC,QAAAC,MAAAF,EAAA,CACAG,OAAA,OACAC,KAAAX,IAIAY,QAAAJ,EAAAK,OACA7C,cAAA4C,EAAA3C,OAAA2C,EAAA1C,QAAA0C,EAAAzC,MAEA,MAAA2C,GACAC,QAAAC,IAAA,yBAAAF,SA5BAlC,eAAA,QAAA,+BAAA,cALAA,eAAA,QAAA,kCAAA","file":"bundle.js","sourcesContent":["if (window.location.pathname === '/registro') {\n\n    const btnCrear = document.getElementById('crear-cuenta');\n\n    if (btnCrear) {\n        btnCrear.addEventListener('click', async function(event) { // Marca la función como 'async'\n\n            event.preventDefault();\n\n            const nuevoUsuario = {\n                nombre: document.getElementById('nombre').value.trim(),\n                email: document.getElementById('email').value.trim(),\n                password: document.getElementById('password').value.trim(),\n                password2: document.getElementById('password2').value.trim(),\n                telefono: document.getElementById('telefono').value.trim(),\n                direccion: document.getElementById('direccion').value.trim()\n            };\n\n            if (nuevoUsuario.email === \"\" || nuevoUsuario.nombre === \"\" || nuevoUsuario.direccion === \"\" || nuevoUsuario.password === \"\" || nuevoUsuario.password2 === \"\") {\n                mostrarAlerta2('Error', 'Todos los campos son necesarios', 'error');\n                return;\n            }\n            \n            if (nuevoUsuario.password !== nuevoUsuario.password2) {\n                mostrarAlerta2('Error', 'Las contraseñas no coinciden', 'error');\n                return;\n            }\n            \n            // Eliminar 'password2' antes de enviarlo al servidor\n            delete nuevoUsuario.password2;\n\n            try {\n                // Crear FormData para enviar los datos\n                const datos = new FormData();\n                Object.entries(nuevoUsuario).forEach(([key, value]) => datos.append(key, value));\n\n                // // Imprimir los valores de FormData\n                // datos.forEach((value, key) => {\n                //     console.log(key + \": \" + value);\n                // });\n\n                const url = 'http://localhost:3000/registro';\n                const respuesta = await fetch(url, { // Corregido: Usar un objeto en lugar de un array\n                    method: 'POST',\n                    body: datos\n                });\n\n                // Esperar la respuesta en formato JSON\n                const resultado = await respuesta.json();\n                mostrarAlerta(resultado.titulo, resultado.mensaje, resultado.tipo);\n                \n            } catch (error) {\n                console.log('Error en la solicitud:', error);\n            }\n\n        });\n    }\n\n    function mostrarAlerta(titulo, mensaje, tipo) {\n        Swal.fire({\n            icon: tipo,\n            title: titulo,\n            text: mensaje,\n        }).then(() => {\n            $('.modal').modal('hide'); // Cierra todos los modales activos\n        });\n    }    \n\n    function mostrarAlerta2(titulo, mensaje, tipo) {\n        const mensajeResultado = document.getElementById('mensaje-resultado');\n        mensajeResultado.style.display = 'block'; // Asegúrate de que el contenedor se muestre\n        mensajeResultado.textContent = mensaje; // Mostrar solo el mensaje\n    \n        // Cambiar el color de fondo del contenedor según el tipo de mensaje\n        if (tipo === 'error') {\n            mensajeResultado.className = 'alert alert-danger'; // Rojo para error\n        } else if (tipo === 'success') {\n            mensajeResultado.className = 'alert alert-success'; // Verde para éxito\n        } else {\n            mensajeResultado.className = 'alert alert-info'; // Azul o información por defecto\n        }\n    \n        // Opcional: Ocultar el mensaje después de 5 segundos\n        setTimeout(() => {\n            mensajeResultado.style.display = 'none';\n        }, 5000);\n    }\n    \n}\n"]}