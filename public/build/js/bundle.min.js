if("/admin/configuracion/informacion"===window.location.pathname){const t=document.getElementById("btnActualizarInfo");function mostrarAlerta(t,e,a){Swal.fire({icon:a,title:t,text:e}).then(()=>{$(".modal").modal("hide"),location.reload()})}t&&t.addEventListener("click",(async function(e){e.preventDefault();const a={id:t.dataset.id,nombre:document.getElementById("nombre").value.trim(),telefono:document.getElementById("telefono").value.trim(),correo:document.getElementById("correo").value.trim(),ubicacion:document.getElementById("ubicacion").value.trim(),img:document.getElementById("logo").files[0]};try{const t=new FormData;Object.entries(a).forEach(([e,a])=>t.append(e,a));const e="/admin/configuracion/informacion/actualizar",n=await fetch(e,{method:"POST",body:t}),o=await n.json();mostrarAlerta(o.titulo,o.mensaje,o.tipo)}catch(t){console.log("error")}}))}if(window.mostrarAlerta=function(t,e,a){Swal.fire({icon:a,title:t,text:e}).then(()=>{$(".modal").modal("hide")})},window.mostrarAlerta2=function(t,e){const a=document.getElementById("mensaje-resultado");a.style.display="block",a.textContent=t,a.className="alert alert-"+("error"===e?"danger":"success"===e?"success":"info"),setTimeout(()=>{a.style.display="none"},5e3)},"/login"===window.location.pathname){const t=document.getElementById("btnIniciarSesion");t&&t.addEventListener("click",(async function(t){t.preventDefault();const e={email:document.getElementById("email").value.trim(),password:document.getElementById("password").value.trim()};if(""!==e.email&&""!==e.password)try{const t=new FormData;Object.entries(e).forEach(([e,a])=>t.append(e,a));const a="http://localhost:3000/login",n=await fetch(a,{method:"POST",body:t}),o=await n.json();o.autorizado?window.location.href="/admin/index":mostrarAlerta2(o.mensaje,o.tipo)}catch(t){console.log(t)}else mostrarAlerta2("Todos los campos son obligatorios","error")}))}if("/admin/configuracion/categorias"===window.location.pathname){let t,e=!1;const a={0:"Inactivo",1:"Activo"},n={destroy:!0,pageLength:5,language:{url:"https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json"},dom:'<"row mb-2"<"d-flex justify-content-start col-sm-6"f>><"row"<"col-sm-12"tr>><"row d-flex justify-content-between"<"col d-flex justify-content-start"l><"col d-flex justify-content-center"i><"col d-flex justify-content-end"p>>',columnDefs:[{orderable:!1,targets:[7]}]};async function initDataTable(){e&&t.destroy();const a=await listarCategorias();a.length>0&&llenarTabla(a),t=$("#datatable_categorias").DataTable(n),e=!0}async function listarCategorias(){try{const t=await fetch("/api/categorias");if(204===t.status)return[];if(!t.ok)throw new Error("Error HTTP: "+t.status);return await t.json()}catch(t){return console.error("Error al obtener categorías:",t),null}}function llenarTabla(t){const e=document.getElementById("tableBody_categorias");e.innerHTML="",t.forEach((t,n)=>{const o=a[t.estado]||"Desconocido",r=`\n                <tr>\n                    <td>${n+1}</td>\n                    <td>${t.nombre}</td>\n                    <td class="text-center">${t.capacidad_maxima}</td>\n                    <td>${t.tipo_cama}</td>\n                    <td>${t.precio_base}</td>\n                    <td>${t.servicios_incluidos}</td>\n                    <td>${o}</td>\n                    <td>\n                        \x3c!-- Botón de editar que abre el modal --\x3e\n                        <button \n                            class="btn btn-sm btn-primary btnEditarCategoria" \n                            data-id="${t.id}" \n                            data-toggle="modal" \n                            data-target="#modalEditarCategoria">\n                            <i class="fa-solid fa-pen"></i>\n                        </button>\n                        \x3c!-- Botón de eliminar --\x3e\n                        <button class="btn btn-sm btn-danger btn-eliminarCategoria" data-id="${t.id}">\n                            <i class="fa-solid fa-trash"></i>\n                        </button>\n                    </td>\n                </tr>\n            `;e.innerHTML+=r})}initDataTable();let o=null;document.addEventListener("click",(async function(t){if(t.target.closest(".btnEditarCategoria")){const e=t.target.closest(".btnEditarCategoria").dataset.id;o=null;try{const t="/api/categorias/"+e,a=await fetch(t);if(!a.ok)throw new Error("Error al obtener categoria: "+a.statusText);const n=await a.json();o={...n},document.getElementById("nombreEditar").value=n.nombre,document.getElementById("capacidad_maximaEditar").value=n.capacidad_maxima,document.getElementById("tipo_camaEditar").value=n.tipo_cama,document.getElementById("precio_baseEditar").value=n.precio_base,document.getElementById("servicios_incluidosEditar").value=n.servicios_incluidos,document.getElementById("estadoEditar").value=n.estado,document.querySelector(".btnActualizarCategoria").dataset.id=e}catch(t){console.log("Error al obtener los datos de la categoria:",t)}}}))}if("/admin/configuracion/niveles"===window.location.pathname){let t,e=!1;const a={0:"Inactivo",1:"Activo"},n={destroy:!0,pageLength:5,language:{url:"https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json"},dom:'<"row mb-2"<"d-flex justify-content-start col-sm-6"f>><"row"<"col-sm-12"tr>><"row d-flex justify-content-between"<"col d-flex justify-content-start"l><"col d-flex justify-content-center"i><"col d-flex justify-content-end"p>>',columnDefs:[{orderable:!1,targets:[4]}]};async function initDataTable(){e&&t.destroy();const a=await listarNiveles();a.length>0&&llenarTabla(a),t=$("#datatable_niveles").DataTable(n),e=!0}async function listarNiveles(){try{const t=await fetch("/api/niveles");return await t.json()}catch(t){return console.error("Error al obtener niveles:",t),[]}}function llenarTabla(t){const e=document.getElementById("tableBody_niveles");e.innerHTML="",t.forEach((t,n)=>{const o=a[t.estatus]||"Desconocido",r=`\n                <tr>\n                    <td>${n+1}</td>\n                    <td>${t.nombre}</td>\n                    <td>${t.numero}</td>\n                    <td class="text-center">${o}</td>\n                    <td>\n                        \x3c!-- Botón de editar que abre el modal --\x3e\n                        <button \n                            class="btn btn-sm btn-primary btnEditarNivel" \n                            data-id="${t.id}" \n                            data-toggle="modal" \n                            data-target="#modalEditarNivel">\n                            <i class="fa-solid fa-pen"></i>\n                        </button>\n                        \x3c!-- Botón de eliminar --\x3e\n                        <button class="btn btn-sm btn-danger btn-eliminarNivel" data-id="${t.id}">\n                            <i class="fa-solid fa-trash"></i>\n                        </button>\n                    </td>\n                </tr>\n            `;e.innerHTML+=r})}initDataTable(),document.getElementById("tableBody_niveles").addEventListener("click",(async function(t){if(t.target.closest(".btn-eliminarNivel")){const e=t.target.closest(".btn-eliminarNivel").getAttribute("data-id");if((await Swal.fire({title:"¿Estás seguro?",text:"Esta acción no se puede deshacer.",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Sí, eliminar",cancelButtonText:"Cancelar"})).isConfirmed)try{const t="/api/niveles/"+e,a=await fetch(t,{method:"DELETE"}),n=await a.json();mostrarAlerta(n.titulo,n.mensaje,n.tipo),"success"===n.tipo&&await initDataTable()}catch(t){console.error(t)}}}));let o=null;document.addEventListener("click",(async function(t){if(t.target.closest(".btnEditarNivel")){const e=t.target.closest(".btnEditarNivel").dataset.id;o="";try{const t=await fetch("/api/niveles/"+e);if(!t.ok)throw new Error("Error al obtener nivel: "+t.statusText);const a=await t.json();o={...a},document.getElementById("nombreEditar").value=a.nombre,document.getElementById("numeroEditar").value=a.numero,document.getElementById("estatusEditar").value=a.estatus,document.querySelector(".btnActualizarNivel").dataset.id=e}catch(t){console.error("Error al obtener los datos del nivel:",t)}}})),document.getElementById("formEditarNivel").addEventListener("submit",(async function(t){t.preventDefault();const e=document.querySelector(".btnActualizarNivel").dataset.id,a={nombre:document.getElementById("nombreEditar").value.trim(),numero:document.getElementById("numeroEditar").value.trim(),estatus:document.getElementById("estatusEditar").value.trim()};if(!o)return console.error("Error: No hay datos originales del nivel"),void mostrarAlerta("Error","No se pudieron comparar los datos originales","error");let n={};if(a.nombre!==o.nombre&&(n.nombre=a.nombre),a.numero!==o.numero&&(n.numero=a.numero),a.estatus!==o.estatus&&(n.estatus=a.estatus),0===Object.keys(n).length)return void mostrarAlerta2("No hay cambios por enviar","error");const r=3===Object.keys(n).length?"PUT":"PATCH",i="PUT"===r?a:n;try{const t=await fetch("/api/niveles/"+e,{method:r,headers:{"Content-Type":"application/json"},body:JSON.stringify(i)});if(!t.ok){const e=await t.json();throw new Error(e.mensaje||"Error desconocido al actualizar")}const a=await t.json();mostrarAlerta(a.titulo,a.mensaje,a.tipo),initDataTable()}catch(t){console.error("Error al actualizar nivel:",t),mostrarAlerta("Error",t.message,"error")}}));document.querySelector(".btnSubirNivel").addEventListener("click",(async function(t){t.preventDefault();const e={nombre:document.getElementById("nombre").value.trim(),numero:document.getElementById("numero").value.trim(),estatus:document.getElementById("estatus").value.trim()};if(""!==e.nombre&&""!==e.numero)try{const t=new FormData;Object.entries(e).forEach(([e,a])=>t.append(e,a));const a=await fetch("/api/niveles",{method:"POST",body:t}),n=await a.json();mostrarAlerta(n.titulo,n.mensaje,n.tipo),initDataTable(),document.getElementById("nombre").value="",document.getElementById("numero").value="",document.getElementById("estatus").value=""}catch(t){console.error("Error en la solicitud:",t)}else mostrarAlerta2("Todos los campos son necesarios","error")}))}if("/registro"===window.location.pathname){const t=document.getElementById("crear-cuenta");t&&t.addEventListener("click",(async function(t){t.preventDefault();const e={nombre:document.getElementById("nombre").value.trim(),apellidos:document.getElementById("apellidos").value.trim(),email:document.getElementById("email").value.trim(),password:document.getElementById("password").value.trim(),password2:document.getElementById("password2").value.trim(),telefono:document.getElementById("telefono").value.trim(),direccion:document.getElementById("direccion").value.trim()};if(""!==e.email&&""!==e.nombre&&""!==e.direccion&&""!==e.password&&""!==e.password2&&""!==e.telefono)if(e.password===e.password2){delete e.password2;try{const t=new FormData;Object.entries(e).forEach(([e,a])=>t.append(e,a));const a="http://localhost:3000/registro",n=await fetch(a,{method:"POST",body:t}),o=await n.json();mostrarAlerta(o.titulo,o.mensaje,o.tipo)}catch(t){console.log("Error en la solicitud:",t)}}else mostrarAlerta2("Las contraseñas no coinciden","error");else mostrarAlerta2("Todos los campos son necesarios","error")}))}if("/admin/usuarios"===window.location.pathname){let t,e=!1;const a={1:"Administrador",2:"General",3:"Limpieza"},n={0:"Inactivo",1:"Activo"},o={destroy:!0,pageLength:5,language:{url:"https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-MX.json"},dom:'<"row mb-2"<"d-flex justify-content-start col-sm-6"f>><"row"<"col-sm-12"tr>><"row d-flex justify-content-between"<"col d-flex justify-content-start"l><"col d-flex justify-content-center"i><"col d-flex justify-content-end"p>>',columnDefs:[{orderable:!1,targets:[3,8]},{visible:!1,targets:[7]}]};async function initDataTable(){e&&t.destroy();const a=await listarUsers();a.length>0&&llenarTabla(a),t=$("#datatable_users").DataTable(o),e=!0}async function listarUsers(){try{const t=await fetch("/api/usuarios");return await t.json()}catch(t){return console.error("Error al obtener usuarios:",t),[]}}function llenarTabla(t){const e=document.getElementById("tableBody_users");e.innerHTML="",t.forEach((t,o)=>{const r=a[t.rol_id]||"Desconocido",i=n[t.estatus]||"Desconocido",s=`\n                <tr>\n                    <td>${o+1}</td>\n                    <td><img src="/build/img/${t.img}.png" alt="Descripción de la imagen" width="65"></td>\n                    <td>${t.nombre}</td>\n                    <td>${t.apellido}</td>\n                    <td>${t.direccion}</td>\n                    <td>${t.email}</td>\n                    <td>${t.telefono}</td>\n                    <td>******</td> \x3c!-- Ocultamos la contraseña en opciones de la tabla --\x3e\n                    <td>${r}</td>\n                    <td class="text-center">${i}</td>\n                    <td>\n                        \x3c!-- Botón de editar que abre el modal --\x3e\n                        <button \n                            class="btn btn-sm btn-primary btnEditarUsuario" \n                            data-id="${t.id}" \n                            data-toggle="modal" \n                            data-target="#usuarioEditarModal">\n                            <i class="fa-solid fa-pen"></i>\n                        </button>\n                        \x3c!-- Botón de eliminar --\x3e\n                        <button class="btn btn-sm btn-danger btn-eliminarUsuario" data-id="${t.id}">\n                            <i class="fa-solid fa-trash"></i>\n                        </button>\n                    </td>\n                </tr>\n            `;e.innerHTML+=s})}initDataTable(),document.getElementById("tableBody_users").addEventListener("click",(async function(t){if(t.target.closest(".btn-eliminarUsuario")){const e=t.target.closest(".btn-eliminarUsuario").getAttribute("data-id");if((await Swal.fire({title:"¿Estás seguro?",text:"Esta acción no se puede deshacer.",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Sí, eliminar",cancelButtonText:"Cancelar"})).isConfirmed)try{const t="/api/usuarios/"+e,a=await fetch(t,{method:"DELETE"}),n=await a.json();mostrarAlerta(n.titulo,n.mensaje,n.tipo),"success"===n.tipo&&await initDataTable()}catch(t){console.error(t)}}})),document.addEventListener("click",(async function(t){if(t.target.closest(".btnEditarUsuario")){const e=t.target.closest(".btnEditarUsuario").dataset.id;try{const t=await fetch("/api/usuarios/"+e);if(!t.ok)throw new Error("Error al obtener usuario: "+t.statusText);const a=await t.json();document.getElementById("nombreEditar").value=a.nombre,document.getElementById("apellidoEditar").value=a.apellido,document.getElementById("direccionEditar").value=a.direccion,document.getElementById("emailEditar").value=a.email,document.getElementById("telefonoEditar").value=a.telefono,document.getElementById("rol_idEditar").value=a.rol_id,document.getElementById("estatusEditar").value=a.estatus;document.getElementById("imgEditar").src=a.img?`/build/img/${a.img}.png`:"/build/img/default.png",document.querySelector(".btnActualizarUsuario").dataset.id=e,$("#usuarioEditarModal").modal("show")}catch(t){console.error("Error al obtener los datos del usuario:",t)}}})),document.getElementById("formEditarUsuario").addEventListener("submit",(async function(t){t.preventDefault();const e=document.querySelector(".btnActualizarUsuario").dataset.id,a={nombre:document.getElementById("nombreEditar").value.trim(),apellido:document.getElementById("apellidoEditar").value.trim(),direccion:document.getElementById("direccionEditar").value.trim(),email:document.getElementById("emailEditar").value.trim(),telefono:document.getElementById("telefonoEditar").value.trim(),password:document.getElementById("passwordEditar").value.trim(),password2:document.getElementById("password2Editar").value.trim(),rol_id:document.getElementById("rol_idEditar").value.trim(),estatus:document.getElementById("estatusEditar").value.trim(),img:document.getElementById("logoEditar").files[0]};if(a.password===a.password2)if(a.telefono.length>10)mostrarAlerta("Error","Telefono no valido","error");else{delete a.password2;try{const t=new FormData;Object.entries(a).forEach(([e,a])=>t.append(e,a));const n=await fetch("/api/usuarios/"+e,{method:"POST",body:t}),o=await n.json();mostrarAlerta(o.titulo,o.mensaje,o.tipo),initDataTable()}catch(t){console.error("Error al actualizar usuario:",t)}}else mostrarAlerta("Error","Las contraseñas no coinciden.","error")}));document.querySelector(".btnSubirUsuario").addEventListener("click",(async function(t){t.preventDefault();const e={nombre:document.getElementById("nombre").value.trim(),apellido:document.getElementById("apellido").value.trim(),direccion:document.getElementById("direccion").value.trim(),email:document.getElementById("email").value.trim(),telefono:document.getElementById("telefono").value.trim(),password:document.getElementById("password").value.trim(),password2:document.getElementById("password2").value.trim(),rol_id:document.getElementById("rol_id").value.trim(),estatus:document.getElementById("estatus").value.trim(),img:document.getElementById("logo").files[0]};if(""===e.email||""===e.nombre||""===e.direccion||""===e.password||""===e.password2||""===e.telefono)return void mostrarAlerta2("Todos los campos son necesarios","error");if(e.password!==e.password2)return void mostrarAlerta2("Las contraseñas no coinciden.","error");if(e.telefono.length>10)return void mostrarAlerta2("Telefono no valido","error");if(/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email)){delete e.password2;try{const t=new FormData;Object.entries(e).forEach(([e,a])=>t.append(e,a));const a=await fetch("/api/usuarios",{method:"POST",body:t}),n=await a.json();mostrarAlerta(n.titulo,n.mensaje,n.tipo),initDataTable()}catch(t){console.error("Error en la solicitud:",t)}}else mostrarAlerta2("El correo electrónico no tiene un formato válido.","error")}))}
//# sourceMappingURL=bundle.js.map
